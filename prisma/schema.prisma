generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @map("updated_at")

  email String @unique
  password String

  name String @unique
  avatarPath String @default("/uploads/default-avatar.png") @map("avatar_path")

  phone String @unique
  
  orders Order[]
  reviews Review[]
  favorites Product[]
}

model Product {
  id String @id @unique @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name String @unique
  slug String @unique
  author String
  description String
  price Int
  images String[]

  orderItems OrderItem[]
  reviews Review[]

  category Category? @relation(fields: [categoryUuid], references: [id])
  categoryUuid String? @map("category_uuid")

  user User? @relation(fields: [userUuid], references: [id])
  userUuid String? @map("user_uuid")
}

model Category {
  id String @id @unique @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name String @unique
  slug String @unique
  
  products Product[]
}

model Review {
  id String @id @unique @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  rating Int
  text String
  
  user User @relation(fields: [userUuid], references: [id])
  userUuid String @map("user_uuid")

  product Product @relation(fields: [productUuid], references: [id])
  productUuid String @map("product_uuid")
}

model Order {
  id String @id @unique @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  status EnumOrderStatus @default(PENDING)

  items OrderItem[]

  user User @relation(fields: [userUuid], references: [id])
  userUuid String @map("user_uuid")
}

model OrderItem {
  id String @id @unique @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  quantity Int
  price Int

  order Order? @relation(fields: [orderUuid], references: [id])
  orderUuid String? @map("order_uuid")

  product Product? @relation(fields: [productUuid], references: [id])
  productUuid String @map("product_uuid")

  @@map("Oder_item")
}

enum EnumOrderStatus {
  PENDING
  PAYED
  SHIPPED
  DELIVERED
}